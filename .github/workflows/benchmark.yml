name: Benchmarks

on:
  pull_request:
    branches: [ main ]

jobs:
  benchmark:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2019
            cuda: 'CUDA-11.4.0'
            visual_studio: 'Visual Studio 16 2019'
            benchmark: 'thumbnail'
          - os: windows-2019
            cuda: 'CUDA-11.4.0'
            visual_studio: 'Visual Studio 16 2019'
            benchmark: 'dcraw'
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'true'
        
    - name: Install CUDA
      env:
        cuda: ${{ matrix.cuda }}
        visual_studio: ${{ matrix.visual_studio }}
      shell: powershell
      run: .\build\cuda.ps1
      
    - name: Check NVCC
      shell: powershell
      run: |
        nvcc -V
        ls $env:CUDA_PATH
        ls $env:CUDA_PATH\bin
        ls $env:CUDA_PATH\include

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.102

    - name: Setup NuGet.exe
      uses: NuGet/setup-nuget@v1.0.5
      with:
        nuget-version: 5.x

    - name: Build
      run: dotnet build src/FileOnQ.Imaging.Raw/FileOnQ.Imaging.Raw.csproj -c Release
      
    - name: Benchmark
      run: dotnet run -c Release -b {{ matrix.benchmark }}
      working-directory: ./benchmarks/tools
      
    - name: Upload Results
      uses: actions/upload-artifact@v2
      with:
        name: Benchmark-${{ matrix.benchmark }}
        path: ./benchmarks/tools/BenchmarkDotNet.Artifacts/results
        
  benchmark-compare:
    needs: benchmark
    runs-on: windows-2019
    steps:
      - name: Clone dotnet/performance
        uses: actions/checkout@v2
        with:
          repository: https://github.com/dotnet/performance
          
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: benchmark-artifacts
      
      - name: See artifacts
        run: ls
        working-directory: ./benchmark-artifacts
      